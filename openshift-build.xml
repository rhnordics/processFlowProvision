<project name="pfp-openshift" >

    <target name="provision.openshift.brms.webs" description="" >
        <mkdir dir="${install.home}/lib" />
        <antcall target="distro.clean" />
        <antcall target="download.jbpm5.artifacts" />
        <antcall target="prepare.brms.webs" />
        <antcall target="os.refreshGuvnor" >
            <param name="ssh.url" value="${brmsWebs.ssh.url}"/>
            <param name="os.data.dir" value="${brmsWebs.data.dir}"/>
        </antcall>
        <antcall target="os.deploy.brms.webs" >
            <param name="ssh.url" value="${brmsWebs.ssh.url}"/>
            <param name="remote.deployments.dir" value="${brmsWebs.deployments.dir}"/>
        </antcall>
       <antcall target="os.refresh.jboss" >
            <param name="server.ip.address" value="${brms.webs.ip.address}"/>
            <param name="management.port" value="${brms.webs.management.port}"/>
            <param name="ssh.url" value="${brmsWebs.ssh.url}"/>
        </antcall>
        <antcall target="cli.batch">
            <param name="cli.source.dir" value="conf/brmsWebs"/>
            <param name="cli.to.filter.and.execute" value="brmsWebs-config-up.cli"/>
            <param name="server.ip.address" value="${brms.webs.ip.address}"/>
            <param name="management.port" value="${brms.webs.management.port}"/>
            <param name="cli.fail.on.error" value="true"/>
        </antcall>

    </target>

    <target name="os.refresh.jboss" >
        <fail unless="server.ip.address" message="refresh.jboss:  need to pass 'server.ip.address' property" />
        <fail unless="management.port" message="refresh.jboss:  need to pass 'management.port' property" />
        <fail unless="ssh.url" message="refresh.jboss:  need to pass 'ssh.url' property" />
        <echo message="***** refresh.jboss :  will now call the following target :  stop.jboss, start.jboss" />
        <antcall target="os.stop.jboss" >
            <param name="server.ip.address" value="${server.ip.address}"/>
            <param name="management.port" value="${management.port}"/>
            <param name="ssh.url" value="${ssh.url}"/>
        </antcall>
        <antcall target="os.start.jboss" >
            <param name="ssh.url" value="${ssh.url}"/>
        </antcall>
    </target>

    <target name="os.stop.jboss" >
        <fail unless="management.port" message="stop.jboss:  need to pass 'management.port' property" />
        <fail unless="ssh.url" message="stop.jboss:  need to pass 'ssh.url' property" />
        <if>    
            <not><isset property="server.ip.address"/></not>
            <then><property name="server.ip.address" value="${ENV.HOSTNAME}" /></then>
        </if>   
        <exec executable="bash" failonerror="true" dir="." >
           <arg value="bin/openshift.sh"/>
           <arg value="stopJboss"/>
           <arg value="-localJbossHome=${jboss.home}"/>
           <arg value="-serverIpAddr=${server.ip.address}"/>
           <arg value="-managementPort=${management.port}"/>
           <arg value="-sshUrl=${ssh.url}"/>
        </exec> 
    </target>


    <target name="os.start.jboss" >
        <fail unless="ssh.url" message="start.jboss:  need to pass 'ssh.url' property" />
        <exec executable="bin/openshift.sh" failonerror="true" >
            <arg value="startJboss"/>
            <arg value="-sshUrl=${ssh.url}"/>
        </exec> 
    </target>

    <target name="os.deploy.brms.webs" >
        <fail unless="ssh.url" message="os.deploy.brms.webs:  need to pass 'ssh.url' property" />
        <fail unless="remote.deployments.dir" message="os.deploy.brms.webs:  need to pass 'remote.deployments.dir' property" />
        <antcall target="create.brms.webs" />
        <exec executable="bash" failonerror="true" dir="." >
           <arg value="bin/openshift.sh"/>
           <arg value="copyFileToRemote"/>
           <arg value="-sshUrl=${ssh.url}"/>
           <arg value="-localDir=${temp.deployments.dir}"/>
           <arg value="-file=${designer.name}"/>
           <arg value="-remoteDir=${remote.deployments.dir}"/>
        </exec> 
        <exec executable="bash" failonerror="true" dir="." >
           <arg value="bin/openshift.sh"/>
           <arg value="copyFileToRemote"/>
           <arg value="-sshUrl=${ssh.url}"/>
           <arg value="-localDir=${temp.deployments.dir}"/>
           <arg value="-file=${guvnor.name}"/>
           <arg value="-remoteDir=${remote.deployments.dir}"/>
        </exec> 
    </target>
    <target name="os.refreshGuvnor" >
        <fail unless="ssh.url" message="os.refreshGuvnor:  need to pass 'ssh.url' property" />
        <fail unless="os.data.dir" message="os.refreshGuvnor:  need to pass 'os.data.dir' property" />
        <antcall target="filter">
            <param name="source.dir" value="conf/brmsWebs/drools-guvnor"/>
            <param name="file.name" value="repository.xml"/>
            <param name="dest.dir" value="target/tmp"/>
        </antcall>
        <exec executable="bash" failonerror="true" dir="." >
           <arg value="bin/openshift.sh"/>
           <arg value="refreshGuvnor"/>
           <arg value="-sshUrl=${ssh.url}"/>
           <arg value="-remoteDir=${os.data.dir}/guvnor"/>
        </exec> 

    </target>

    <target name="provision.openshift.brmsWebs.db" description="">
        <antcall target="filter">
            <param name="source.dir" value="conf/${jdbc.module.name}"/>
            <param name="file.name" value="processFlowProvision.sql"/>
            <param name="dest.dir" value="target/tmp"/>
        </antcall>
        <if>    
            <equals arg1="${jdbc.module.name}" arg2="postgresql" />
            <then>  
                <property name="command" value="executePostgresqlScript" />
            </then> 
            <else>  
                <property name="command" value="executeMysqlScript" />
            </else> 
        </if>   
        <exec executable="bash" failonerror="true" dir="." >
           <arg value="bin/openshift.sh"/>
           <arg value="${command}"/>
           <arg value="-serverIpAddr=${brmsWebs.db.ip.addr}"/>
           <arg value="-managementPort=3306"/>
           <arg value="-sshUrl=${brmsWebs.db.ssh.url}"/>
           <arg value="-user=${brmsWebs.db.root.user}"/>
           <arg value="-password=${brmsWebs.db.root.password}"/>
           <arg value="-localDir=target/tmp" />
           <arg value="-file=processFlowProvision.sql" />
           <arg value="-remoteDir=/tmp" />
        </exec> 
    </target>

</project>
